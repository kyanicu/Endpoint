using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using oteTag = GameManager.OneTimeEventTags;

public class ParadigmTerminal : InteractableEnv
{
    public bool ParadigmGranted { private get; set; }

    // Paradigm generated by this terminal.
    private Paradigm newParadigm;
    public string paradigmName;

    private void Awake()
    {
        functionalityText = "unlock a new Paradigm.";
    }

    public override void ActivateFunctionality()
    {
        if (!ParadigmGranted)
        {
            // Generate a new paradigm to grab its name.
            newParadigm = new Paradigm();
            paradigmName = newParadigm.Name;

            // Open terminal window, and pass this object.
            // Object is passed so functionality can be executed on terminal window close.
            TerminalWindow.instance.openParadigmWindow(this);
        }
    }

    // RunFunctionality: Actually runs the functionality of this object (unlocks paradigm.)
    public void RunFunctionality()
    {
        //Add a new Paradigm to the terminal, add to OneTimeEvent
        GameManager.OneTimeEvents.Add(name, oteTag.Console);
        UpgradesOverlayManager.AddParadigm(newParadigm);
        ParadigmGranted = true;
    }
}
